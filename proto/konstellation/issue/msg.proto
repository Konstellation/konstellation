syntax = "proto3";
package konstellation.sdk.issue;

option go_package = "x/issue/types";

import "gogoproto/gogo.proto";
import "querier.proto";

/*
service Msg {
	rpc HandleMsgIssueCreate(MsgIssueCreate) returns (MsgIssueCreateResponse){
    	option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
  	rpc HandleMsgFeatures(MsgFeatures) returns (MsgFeaturesResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgDescription(MsgDescription) returns (MsgDescriptionResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgTransfer(MsgTransfer) returns (MsgTransferResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgTransferFrom(MsgTransferFrom) returns (MsgTransferFromResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgApprove(MsgApprove) returns (MsgApproveResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgIncreaseAllowance(MsgIncreaseAllowance) returns (MsgIncreaseAllowanceResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgDecreaseAllowance(MsgDecreaseAllowance) returns (MsgDecreaseAllowanceResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgMint(MsgMint) returns (MsgMintResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgBurn(MsgBurn) returns (MsgBurnResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgBurnFrom(MsgBurnFrom) returns (MsgBurnFromResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgTransferOwnership(MsgTransferOwnership) returns (MsgTransferOwnershipResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgFreeze(MsgFreeze) returns (MsgFrezeeResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
	rpc HandleMsgUnfreeze(MsgUnfreeze) returns (MsgUnfrezeeResponse){
   		option (google.api.http).put = "/konstellation/oracle/exchange_rate";
  	}
}
*/

message MsgIssueCreate {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string issuer = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    IssueParams issue_params = 3 [(gogoproto.embed) = true];
}

message MsgDescription {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
	string denom = 2;
	string description = 3;
}

message MsgDisableFeature {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
	string denom = 2;
	string feature = 3;
}

message MsgEnableFeature {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
	string denom = 2;
	string feature = 3;
}

message MsgFeatures {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
	string denom = 2;
    IssueFeatures issue_features = 3 [(gogoproto.embed) = true];
}

message MsgTransfer {
    string from_address = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string to_address = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgTransferFrom {
    string sender = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string from_address = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string to_address = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string amount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgTransferOwnership {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string to_address = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
	string denom = 3;
}

message MsgApprove {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string spender = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgIncreaseAllowance {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string spender = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgDecreaseAllowance {
    string owner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string spender = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgMint {
    string minter = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string to_address = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgBurn {
    string burner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string amount = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgBurnFrom {
    string burner = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string from_address = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgFreeze {
    string freezer = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string holder = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
	string denom = 3;
	string op = 4;
}

message MsgUnfreeze {
    string freezer = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
    string holder = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false];
	string denom = 3;
	string op = 4;
}
