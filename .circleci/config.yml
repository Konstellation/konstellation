# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

defaults: &build_defaults
  working_directory: /go/src/github.com/konstellation/konstellation
  docker:
    - image: circleci/golang:1.13

deps: &dependencies
  run:
    name: dependencies
    command: |
      export PATH="$PATH:$GOBIN"

jobs:
  build:
    <<: *build_defaults
    steps:
      - checkout
      - run:
          name: run build
          command: |
            go build -v ./client/konstellation
            go build -v ./client/konstellationcli
            go build -v ./client/konstellationlcd
      - run:
          name: run tests
          command: |
            go fmt ./...
            go vet ./...
            go test -v ./...
  deploy:
    <<: *build_defaults
    steps:
      - checkout
      - run: mkdir -p /tmp/workspace/dist
      - *dependencies
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go env
      - run: echo $PATH
      - run: go get github.com/mitchellh/gox
      - run: go get -u github.com/tcnksm/ghr
      - run: go get -u github.com/stevenmatthewt/semantics
      - run:
          name: cross compile
          command: |
#             env GOOS=darwin GOARCH=amd64 go build -o konstellationcli ./client/konstellationcli
#             env GOOS=darwin GOARCH=386 go build -o konstellationcli ./client/konstellationcli
            gox -os="linux darwin windows" -arch="amd64 386" -output="/tmp/workspace/dist/{{.OS}}_{{.Arch}}/konstellation" ./client/konstellation
            gox -os="linux darwin windows" -arch="amd64 386" -output="/tmp/workspace/dist/{{.OS}}_{{.Arch}}/konstellationlcd" ./client/konstellationlcd
#            gox -os="linux darwin windows" -arch="amd64 386" -output="/tmp/workspace/dist/{{.OS}}_{{.Arch}}/konstellationcli" ./client/konstellationcli
            cd /tmp/workspace/dist/ && for dir in ./*; do base=$(basename "$dir"); tar -czf "${base}.tar.gz" $dir; done
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts:
          path: /tmp/workspace/dist
          destination: dist
      - add_ssh_keys:
          fingerprints:
            - "b4:d9:f2:79:a6:43:8d:4a:a6:e6:63:4d:f4:82:ba:1a"
      - run:
          name: create release
          command: |
            tag=$(semantics --output-tag)
            if [ "$tag" ]; then
              ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $tag /tmp/workspace/dist/
            else
              echo "The commit message(s) did not indicate a major/minor/patch version."
            fi

workflows:
  version: 2
  build-konstellation:
    jobs:
      - build:
          # filters here are needed to enable this job also for tags
          filters:
            tags:
              only:
                - /^v.*/
      - deploy:
          requires:
            - build